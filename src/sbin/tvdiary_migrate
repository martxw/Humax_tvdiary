#!/mod/bin/jimsh
#
# Create and migrate the tvdiary database.
# Author: Martin Wink, 2014.
#

# In case of error - break glass!
#foreach key [lsort [dict keys $env]] {puts "env($key)=$env($key)"}
#puts "auto_path=$auto_path"

#source /mod/webif/lib/setup
source /mod/webif/html/tvdiary/tvdiary_utils.jim

# --------------------------------------------------------------
# Declare globals
# --------------------------------------------------------------
set logging 1

set CONF_FILEPATH "/mod/etc/tvdiary.conf"

set current_time [clock seconds]
set log_date_fmt "%d/%m/%Y-%H:%M:%S"
set logging_time [clock format $current_time -format $log_date_fmt]
#if { $::logging } {
#  puts "\n$logging_time: tvdiary_migrate.jim"
#}

# --------------------------------------------------------------
# Declare procedures
# --------------------------------------------------------------

#
# Create or open the database file.
#
proc openDB {} {
  set tvdiarydb [sqlite3.open $::DB_FILEPATH]

  return $tvdiarydb;
}

#
# Main
#
proc main {} {
  try {
    #
    # Get a lock for the database.
    #
    if {![acquire_lock tvdiary_db]} {
      throw "Cannot acquire exclusive lock for tvdiary.tb."
    }

    set tvdiarydb [openDB]

    create_migrate_tables $tvdiarydb

    migrate_conf $tvdiarydb

    $tvdiarydb close

    #
    # Closed the DB so release the lock.
    #
    release_lock tvdiary_db

    set finished_time [clock seconds]

    puts "$::logging_time: Migration completed successfully at [clock format $finished_time -format $::log_date_fmt] after [expr $finished_time - $::current_time] seconds."
  } on error { msg } {
    puts "$::logging_time: Migration failed. \[$msg\]"
    puts [info stacktrace]
    exit
  }
}

#
# Create the tables for a new installation, or migrate the DB contents for existing installations.
# Called after installation and by tvdiary_status.
#
proc create_migrate_tables { tvdiarydb } {

  set programs_exists [table_exists $tvdiarydb "programs"]
  set inventory_exists [table_exists $tvdiarydb "inventory"]
  set program_facts_exists [table_exists $tvdiarydb "program_facts"]

  puts "$::logging_time: programs_exists=$programs_exists"
  puts "$::logging_time: inventory_exists=$inventory_exists"
  puts "$::logging_time: program_facts_exists=$program_facts_exists"

  if { $programs_exists == 0 } {
    puts "$::logging_time: Creating fresh empty database in $::DB_FILEPATH."

    # Completely fresh installation - create everything.
    $tvdiarydb query "CREATE TABLE IF NOT EXISTS channels(channel_id INTEGER PRIMARY KEY, channel_name TEXT);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ic_channel_name ON channels (channel_name);"

    $tvdiarydb query "CREATE TABLE IF NOT EXISTS titles(title_id INTEGER PRIMARY KEY, title TEXT);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS it_title ON titles (title);"

    $tvdiarydb query "CREATE TABLE IF NOT EXISTS synopses(synopsis_id INTEGER PRIMARY KEY, synopsis TEXT);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS is_synopsis ON synopses (synopsis);"

    $tvdiarydb query "CREATE TABLE IF NOT EXISTS programs(program_id INTEGER PRIMARY KEY, channel_id INTEGER, title_id INTEGER, synopsis_id INTEGER, start INTEGER, duration INTEGER, crid TEXT);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_channel_id ON programs (channel_id);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_title_id ON programs (title_id);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_synopsis_id ON programs (synopsis_id);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_start ON programs (start);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_crid ON programs (crid);"

    $tvdiarydb query "CREATE TABLE IF NOT EXISTS activities(activity_id INTEGER PRIMARY KEY, program_id INTEGER, type TEXT, start INTEGER, end INTEGER, unfinished INTEGER);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ia_program_id ON activities (program_id);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ia_start ON activities (start);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ia_end ON activities (end);"

    $tvdiarydb query "CREATE TABLE IF NOT EXISTS inventory(inventory_id INTEGER PRIMARY KEY, flag INTEGER, directory TEXT, filename TEXT, size TEXT, channel_id INTEGER, title_id INTEGER, synopsis_id INTEGER, event_start INTEGER, event_end INTEGER, scheduled_start INTEGER, scheduled_duration INTEGER);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_directory ON inventory (directory);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_filename ON inventory (filename);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_channel_id ON inventory (channel_id);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_scheduled_start ON inventory (scheduled_start);"

    $tvdiarydb query "CREATE TABLE IF NOT EXISTS settings(name TEXT, value TEXT);"
    $tvdiarydb query "CREATE UNIQUE INDEX IF NOT EXISTS is_name ON settings (name);"

    # Program facts table. The year and month dimensions are combined into a single integer (eg 201312) for ease of comparison. The title and channel IDs are also dimensions.
    $tvdiarydb query "CREATE TABLE IF NOT EXISTS program_facts(fact_id INTEGER PRIMARY KEY, year_month INTEGER, title_id INTEGER, channel_id INTEGER, recorded_count INTEGER, played_count INTEGER, live_count INTEGER, scheduled_duration INTEGER, recorded_duration INTEGER, played_duration INTEGER, live_duration INTEGER, barely_watched_count INTEGER);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ipf_year_month ON program_facts (year_month);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ipf_title_id ON program_facts (title_id);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS ipf_channel_id ON program_facts (channel_id);"

    # The watchlist intermediate cache.
    $tvdiarydb query "CREATE TABLE IF NOT EXISTS watchlist_inter(title TEXT, synopsis TEXT, channel_name TEXT, start INTEGER, end INTEGER, duration INTEGER, event_crid TEXT, series_crid TEXT, rec_crid TEXT, PRIMARY KEY(channel_name, start));"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_start ON watchlist_inter (start);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_end ON watchlist_inter (end);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_title ON watchlist_inter (title);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_synopsis ON watchlist_inter (synopsis);"
    $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_event_crid ON watchlist_inter (event_crid);"

    set_setting $tvdiarydb "db_ver" 5

  } else {
    # There is an existing DB, so migration is necessary.
    # Originally there was no version number & no settings or inventory table.
    set db_ver 1
    if { $inventory_exists != 0 } {
      set last_db_ver [get_setting $tvdiarydb "db_ver" 2]
      if { $program_facts_exists != 0 && $last_db_ver == 2 } {
        # An oversight of v3-0 was the db_ver setting was missed off. So if the program_facts table exists it's v3.
        set last_db_ver 3
      }
      set db_ver $last_db_ver
    }

    puts "$::logging_time: Migrating database from schema v$db_ver in $::DB_FILEPATH."

    # 1) As created initially:
    # "CREATE TABLE programs(program_id INTEGER PRIMARY KEY, channel_name TEXT, title TEXT, synopsis TEXT, start INTEGER, duration INTEGER);"
    # "CREATE TABLE activities(activity_id INTEGER PRIMARY KEY, program_id INTEGER, type TEXT, start INTEGER, end INTEGER, unfinished INTEGER);"

    # 2) With inventory, settings & indexes added:
    # "CREATE TABLE IF NOT EXISTS programs(program_id INTEGER PRIMARY KEY, channel_name TEXT, title TEXT, synopsis TEXT, start INTEGER, duration INTEGER);"
    # "CREATE INDEX IF NOT EXISTS ip_title ON programs (title);"
    # "CREATE INDEX IF NOT EXISTS ip_synopsis ON programs (synopsis);"
    # "CREATE INDEX IF NOT EXISTS ip_channel_name ON programs (channel_name);"
    # "CREATE INDEX IF NOT EXISTS ip_start ON programs (start);"
    # "CREATE TABLE IF NOT EXISTS activities(activity_id INTEGER PRIMARY KEY, program_id INTEGER, type TEXT, start INTEGER, end INTEGER, unfinished INTEGER);"
    # "CREATE INDEX IF NOT EXISTS ia_program_id ON activities (program_id);"
    # "CREATE INDEX IF NOT EXISTS ia_start ON activities (start);"
    # "CREATE INDEX IF NOT EXISTS ia_end ON activities (end);"
    # "CREATE TABLE IF NOT EXISTS inventory(inventory_id INTEGER PRIMARY KEY, flag INTEGER, directory TEXT, filename TEXT, size TEXT, channel_name TEXT, title TEXT, synopsis TEXT, event_start INTEGER, event_end INTEGER, scheduled_start INTEGER, scheduled_duration INTEGER);"
    # "CREATE INDEX IF NOT EXISTS ii_directory ON inventory (directory);"
    # "CREATE INDEX IF NOT EXISTS ii_filename ON inventory (filename);"
    # "CREATE INDEX IF NOT EXISTS ii_channel_name ON inventory (channel_name);"
    # "CREATE INDEX IF NOT EXISTS ii_scheduled_start ON inventory (scheduled_start);"
    # "CREATE TABLE IF NOT EXISTS settings(name TEXT, value TEXT);"
    # "CREATE UNIQUE INDEX IF NOT EXISTS is_name ON settings (name);"

    # 3) Explicit db_ver in settings & separate tables for strings.
    # ** Except, db_ver only in settings for upgrades. Fresh installs left with no db_ver.

    # 4) Had watchlist_inter with "warning TEXT, content_type INTEGER, content TEXT".

    # 5) Removed watchlist_inter "warning TEXT, content_type INTEGER, content TEXT" columns.

    if { $db_ver == 1 || $db_ver == 2 } {
      # Create the missing tables if they're not present.
      $tvdiarydb query "CREATE TABLE IF NOT EXISTS channels(channel_id INTEGER PRIMARY KEY, channel_name TEXT);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ic_channel_name ON channels (channel_name);"

      $tvdiarydb query "CREATE TABLE IF NOT EXISTS titles(title_id INTEGER PRIMARY KEY, title TEXT);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS it_title ON titles (title);"

      $tvdiarydb query "CREATE TABLE IF NOT EXISTS synopses(synopsis_id INTEGER PRIMARY KEY, synopsis TEXT);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS is_synopsis ON synopses (synopsis);"

      $tvdiarydb query "CREATE TABLE IF NOT EXISTS settings(name TEXT, value TEXT);"
      $tvdiarydb query "CREATE UNIQUE INDEX IF NOT EXISTS is_name ON settings (name);"

      $tvdiarydb query "CREATE TABLE IF NOT EXISTS program_facts(fact_id INTEGER PRIMARY KEY, year_month INTEGER, title_id INTEGER, channel_id INTEGER, recorded_count INTEGER, played_count INTEGER, live_count INTEGER, scheduled_duration INTEGER, recorded_duration INTEGER, played_duration INTEGER, live_duration INTEGER, barely_watched_count INTEGER);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ipf_year_month ON program_facts (year_month);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ipf_title_id ON program_facts (title_id);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ipf_channel_id ON program_facts (channel_id);"

      # For activities, the table's unchanged so just add indexes.
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ia_program_id ON activities (program_id);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ia_start ON activities (start);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ia_end ON activities (end);"

      # For programs, rename the table first, create a new table & indexes, then migrate the data, and finally delete the old table.
      $tvdiarydb query "ALTER TABLE programs RENAME TO old_programs;"
      $tvdiarydb query "CREATE TABLE programs(program_id INTEGER PRIMARY KEY, channel_id INTEGER, title_id INTEGER, synopsis_id INTEGER, start INTEGER, duration INTEGER, crid TEXT);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_channel_id ON programs (channel_id);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_title_id ON programs (title_id);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_synopsis_id ON programs (synopsis_id);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_crid ON programs (crid);"

      # The watchlist intermediate cache.
      $tvdiarydb query "CREATE TABLE IF NOT EXISTS watchlist_inter(title TEXT, synopsis TEXT, channel_name TEXT, start INTEGER, end INTEGER, duration INTEGER, event_crid TEXT, series_crid TEXT, rec_crid TEXT, PRIMARY KEY(channel_name, start));"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_start ON watchlist_inter (start);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_end ON watchlist_inter (end);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_title ON watchlist_inter (title);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_synopsis ON watchlist_inter (synopsis);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_event_crid ON watchlist_inter (event_crid);"

      puts "$::logging_time: Normalizing programme information."

      set records [$tvdiarydb query "SELECT program_id, channel_name, title, synopsis, start, duration FROM old_programs"]
      foreach record $records {
        set channel_name $record(channel_name)
        set channel_id [get_channel_id $tvdiarydb $channel_name]
        #puts "$channel_name -> $channel_id"

        set title $record(title)
        set title_id [get_title_id $tvdiarydb $title]
        #puts "$title -> $title_id"

        set synopsis $record(synopsis)
        set synopsis_id [get_synopsis_id $tvdiarydb $synopsis]
        #puts "$synopsis -> $synopsis_id"

        $tvdiarydb query "INSERT INTO programs (program_id, channel_id, title_id, synopsis_id, start, duration) VALUES (%s, %s, %s, %s, %s, %s)" $record(program_id) $channel_id $title_id $synopsis_id $record(start) $record(duration)
      }
      $tvdiarydb query "DROP TABLE old_programs;"

      # Only create some indexes at the end as names clash with the old table's indexes.
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_start ON programs (start);"

      # Similarly for inventory, rename the table first, create a new table & indexes, then migrate the data, and finally delete the old table.
      if { $db_ver == 2 } {
        $tvdiarydb query "ALTER TABLE inventory RENAME TO old_inventory;"
      }

      $tvdiarydb query "CREATE TABLE inventory(inventory_id INTEGER PRIMARY KEY, flag INTEGER, directory TEXT, filename TEXT, size TEXT, channel_id INTEGER, title_id INTEGER, synopsis_id INTEGER, event_start INTEGER, event_end INTEGER, scheduled_start INTEGER, scheduled_duration INTEGER);"

      if { $db_ver == 2 } {
        puts "$::logging_time: Normalizing inventory information."

        set records [$tvdiarydb query "SELECT inventory_id, flag, directory, filename, size, channel_name, title, synopsis, event_start, event_end, scheduled_start, scheduled_duration FROM old_inventory"]
        foreach record $records {
          set channel_name $record(channel_name)
          set channel_id [get_channel_id $tvdiarydb $channel_name]
          #puts "$channel_name -> $channel_id"

          set title $record(title)
          set title_id [get_title_id $tvdiarydb $title]
          #puts "$title -> $title_id"

          set synopsis $record(synopsis)
          set synopsis_id [get_synopsis_id $tvdiarydb $synopsis]
          #puts "$synopsis -> $synopsis_id"

          $tvdiarydb query "INSERT INTO inventory (inventory_id, flag, directory, filename, size, channel_id, title_id, synopsis_id, event_start, event_end, scheduled_start, scheduled_duration) VALUES (%s, %s, '%s', '%s', '%s', %s, %s, %s, %s, %s, %s, %s)" $record(inventory_id) $record(flag) $record(directory) $record(filename) $record(size) $channel_id $title_id $synopsis_id $record(event_start) $record(event_end) $record(scheduled_start) $record(scheduled_duration)
        }
        $tvdiarydb query "DROP TABLE old_inventory;"
      }

      # Only create some indexes at the end as names clash with the old table's indexes.
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_directory ON inventory (directory);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_filename ON inventory (filename);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_channel_id ON inventory (channel_id);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ii_scheduled_start ON inventory (scheduled_start);"

      puts "$::logging_time: Cleaning up and compacting database."

      set_setting $tvdiarydb "db_ver" 5

      $tvdiarydb query "VACUUM;"
    } elseif { $db_ver == 3 } {

      $tvdiarydb query "ALTER TABLE programs ADD COLUMN crid TEXT;"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS ip_crid ON programs (crid);"
      puts "$::logging_time: Added CRID column."

      # The watchlist intermediate cache.
      $tvdiarydb query "CREATE TABLE IF NOT EXISTS watchlist_inter(title TEXT, synopsis TEXT, channel_name TEXT, start INTEGER, end INTEGER, duration INTEGER, event_crid TEXT, series_crid TEXT, rec_crid TEXT, PRIMARY KEY(channel_name, start));"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_start ON watchlist_inter (start);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_end ON watchlist_inter (end);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_title ON watchlist_inter (title);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_synopsis ON watchlist_inter (synopsis);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_event_crid ON watchlist_inter (event_crid);"

      set_setting $tvdiarydb "db_ver" 5
    } elseif { $db_ver == 4 } {

      $tvdiarydb query "DROP TABLE watchlist_inter;"
      $tvdiarydb query "CREATE TABLE IF NOT EXISTS watchlist_inter(title TEXT, synopsis TEXT, channel_name TEXT, start INTEGER, end INTEGER, duration INTEGER, event_crid TEXT, series_crid TEXT, rec_crid TEXT, PRIMARY KEY(channel_name, start));"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_start ON watchlist_inter (start);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_end ON watchlist_inter (end);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_title ON watchlist_inter (title);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_synopsis ON watchlist_inter (synopsis);"
      $tvdiarydb query "CREATE INDEX IF NOT EXISTS iwi_event_crid ON watchlist_inter (event_crid);"

      set_setting $tvdiarydb "db_ver" 5
    } else {
      puts "$::logging_time: No changes required."
    }

  }
}

#
# Migrate the configuration file to the DB settings table.
#
proc migrate_conf { tvdiarydb } {
  if { [file exists $::CONF_FILEPATH] } {
    set day_start "00:00"
    try {
      set settings_fd [open $::CONF_FILEPATH r]
      foreach line [split [read $settings_fd] "\n"] {
        lassign $line settings_key settings_val
        switch $settings_key {
          "day_start" {
            set day_start $settings_val
            break
          }
        }
      }
      $settings_fd close
    } on error { msg } {
      # Use the default if no file.
    }
    file delete $::CONF_FILEPATH
    set_setting $tvdiarydb "day_start" $day_start
  }
}

main
